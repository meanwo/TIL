1) 정점의 개수, 두 정점을 연결하는 간선에 대한 정보(정점a, 정점b, 비용) 가 주어졌을 때 모든 정점을 연결하는 동시에 연결에 드는 비용이 최소가 되게
하는 트리를 최소 신장 트리라고 한다. N개의 정점을 모두 연결하기 위해선 최소 N-1개의 간선이 필요한데, 이때 N-1개의 간선 사이에 사이클이 발생하지 않아야 한다.
따라서, 간선에 대한 정보(정점a, 정점b, 비용)을 비용 기준으로 오름차순으로 정리한 이후, 사이클이 발생하도록 하는 정보를 제외하고 N-1개의 간선을 연결하면
최소 신장 트리가 구성되고 이 때 비용을 모두 합한 것이 최소 비용이다.

2) 최상위 부모 정점의 정보를 저장하는 배열을 하나 생성. (부모 정점의 초깃값은 자기자신 혹은 연관이 없는 숫자로 설정 가능)
정점, 간선, 간선에 대한 정보(정점a, 정점b, 비용) 를 입력 받았을 때, 비용 기준 오름차순으로 정리.
간선에 대한 정보를 낮은 비용부터 탐색하며 정점a와 정점b의 최상위 부모 정점을 비교.
(부모 정점을 저장하는 배열에서 재귀를 통해 최상위 부모 정점을 탐색 가능.)

이 때 최상위 부모가 같다면, 연결했을 때 사이클이 발생하므로 다음 정보로 건너 뜀.
최상위 부모가 다르다면, 두 정점을 연결시킨다는 의미로, 정점b의 최상위 부모 정점에 정점 a의 최상위 부모 정점의 정보를 저장.
그리고, 간선의 연결횟수에 1 추가, 및 누적 비용에 현재 간선의 비용추가.
간선 연결횟수가 정점 개수-1 이 될 때 까지 탐색한 이후, 연결된 트리와 비용을 출력한다.
